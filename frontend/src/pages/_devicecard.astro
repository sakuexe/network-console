---
import { type Device } from './_devices.astro'
import './_devicecard.css'

interface Props {
  device: Device
}

const { device } = Astro.props

let loggedIn = Astro.cookies.has('loggedIn')

const lastUpdate = new Date(device.last_update).toLocaleDateString('fi-FI')
---

<div class="card">
  <div class="device-type">
    <p>{device.type}</p>
  </div>
  <div class="card-header">
    <h3>{device.name}</h3>
    <h4>{device.model}</h4>
    {device.notes && <p class="notes">{device.notes || ''}</p>}
    <p class="last-update">Last updated: {lastUpdate}</p>
  </div>

  <div class="card-body">
    {
      device.url && (
        <a href={device.url} target="_blank">
          Dashboard <i class="bi bi-arrow-up-right"></i>
        </a>
      )
    }
    <div class="ip-address">
      <button type="button"
        ><i class="bi bi-clipboard"></i></button
      >
      <p>{device.ip_address}</p>
    </div>
  </div>

  {
    loggedIn && (
      <div class="card-footer">
        <a href={`manage/${device.id}`} class="edit-button">
          Edit
        </a>
        <div class="divider" />
        <a href={`manage/remove/${device.id}`} class="remove-button">
          Remove
        </a>
      </div>
    )
  }
</div>

<script>
  const buttons: NodeListOf<HTMLButtonElement> =
    document.querySelectorAll('.card-body button')
  buttons.forEach((button) => {
    const ipAddress = button.nextElementSibling as HTMLElement
    const notification = button.lastElementChild as HTMLElement
    const buttonIcon = button.firstElementChild as HTMLElement

    // Copy IP address to clipboard
    button.addEventListener('click', () => {
      navigator.clipboard.writeText(ipAddress.textContent || '')
    })

    // Reset button icon after animation ends
    notification.addEventListener('animationend', () => {
      if (!buttonIcon) return
      buttonIcon.classList.replace('bi-clipboard-check', 'bi-clipboard')
    })
  })
</script>
