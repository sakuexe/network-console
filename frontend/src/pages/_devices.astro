---
import DeviceCard from './_devicecard.astro'
import getApiUrl from '../utils/apiurl.ts'
import './index.css'
const API_URL = getApiUrl()

export type Device = {
  id: number
  type: 'router' | 'switch' | string
  ip_address: string
  name: string
  model: string | null
  url: string | null
  last_update: string
  notes: string | null
}

let devices: Device[] = []

try {
  const response = await fetch(`${API_URL}/devices`)
  devices = await response.json()
} catch (error) {
  console.error(error)
}

const seperatedDevices: Record<string, Device[]> = {}

devices.map((device: Device) => {
  const type = device.type.toLowerCase()
  if (!seperatedDevices[type]) {
    seperatedDevices[type] = []
  }
  seperatedDevices[type].push(device)
})

const isLoggedIn = Astro.cookies.get('loggedIn')?.value === 'true'
---

{
  devices.length < 1 ? (
    <main class="container">
      <header>
        <h2>No devices found</h2>
        <p>No connection to the backend</p>
        <button id="reload">Reload?</button>
      </header>
    </main>
  ) : (
    <main class="container">
      <div class="menu">

        <div class="typelist">
          {Object.keys(seperatedDevices).map((type: string) => (
            <a href={`#${type.toLowerCase()}`} class="capitalize")>
              {type}<span>{seperatedDevices[type].length}</span>
            </a>
          ))}
        </div>

        <div class="actions">
          {isLoggedIn ? (
            <a id="logout"><i class="bi bi-box-arrow-left"></i> Log out</a>
          ) : (
            <a href="/login"><i class="bi bi-box-arrow-in-right"></i> Log in</a>
          )}
          <a href="/manage/add"><i class="bi bi-database-add"></i> Add a device</a>
        </div>

      </div>
      <section>
        {Object.keys(seperatedDevices).map((type: string) => (
          <div class="devicegrid" id={type.toLowerCase()}>
            {seperatedDevices[type].map((device: Device) => (
              <DeviceCard device={device} />
            ))}
          </div>
        ))}
      </section>
    </main>
  )
}

<script>
  document.querySelector('button#reload')?.addEventListener('click', () => {
    window.location.reload()
  })
  document.querySelector('a#logout')?.addEventListener('click', () => {
    document.cookie = 'loggedIn=false; path=/;'
    window.location.reload()
  })
</script>
