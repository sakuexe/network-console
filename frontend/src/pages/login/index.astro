---
import Layout from '../../layouts/Layout.astro'
import getApiUrl from '../../utils/apiurl';
const API_URL = getApiUrl()
---

<Layout title="Login to network console">
  <main class="text-center">
    <div class="container">
      <h1>Login to administrative account</h1>
    </div>
    <section>
      <div class="container">
        <div>
          <p>
            Log into the administrative account to manage the devices shown on
            the page. If you don't have an account, contact the maintainer.
          </p>
          <p>
            Return to the front page <a href="/">here</a>
          </p>
        </div>
        <form data-apiurl={API_URL}>
          <input type="text" name="username" id="username" placeholder="username" />
          <input type="password" name="password" id="password" placeholder="password"/>
          <button type="submit">Login</button>
          <output></output>
        </form>
      </div>
    </section>
  </main>
</Layout>

<script>
  const form = document.querySelector('form')
  const output = document.querySelector('form>output')!

  form?.addEventListener("submit", async (event) => {
    event.preventDefault()
    const username: HTMLInputElement = document.querySelector('input#username')!
    const password: HTMLInputElement = document.querySelector('input#password')!

    const response = await fetch('/api/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        username: username.value,
        password: password.value
      })
    }).then(res => res.json())

    if (!response.success) {
      output.textContent = response.message
      return
    }

    document.cookie = `loggedIn=true; path=/`
    window.location.href = '/'
  })
</script>

<style>
  :root {
    --wrapper-padding-inline: 1rem;
    --wrapper-margin-block: 1rem;
    --wrapper-max-width: 50rem;
  }

  main {
    height: 100svh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  section {
    background: var(--primary-dark);
    width: 100%;
    box-shadow: var(--shadow-md);
    padding-block: 2rem;
    border: 4px solid var(--secondary-dark);
    box-shadow: 1rem 1rem 0 var(--secondary-dark);
  }

  .container {
    max-width: var(--wrapper-max-width);
    padding-inline: var(--wrapper-padding-inline);
    margin: 0 auto;
  }

  form {
    display: flex;
    flex-direction: column;
    align-items: center;
    background: var(--primary-darker);
    border-radius: var(--border-radius);
    margin: 0 auto;
  }

  input {
    margin-bottom: 1rem;
    padding: 0.5rem 1rem;
    font-size: 1rem;
    color: var(--secondary-dark);
    border: 2px solid var(--secondary-dark);
    outline: none;
  }

  output {
    font-size: 1rem;
    color: var(--secondary);
  }

  form button {
    background: var(--secondary-dark);
    color: var(--primary-light);
    border: none;
    outline: none;
    cursor: pointer;
    font-size: 1rem;
    padding: 0.5rem 1rem;
    width: 100%;
  }

  @media (min-width: 600px) {
    section > .container {
      display: grid;
      grid-template-columns: 0.8fr 1fr;
      align-items: center;
    }
  }
</style>
